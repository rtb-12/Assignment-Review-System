# Generated by Django 5.1.1 on 2024-10-13 17:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('user_details', models.TextField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'UserDetails',
            },
        ),
        migrations.CreateModel(
            name='AssignmentDetails',
            fields=[
                ('assignment_id', models.AutoField(primary_key=True, serialize=False)),
                ('assignment_name', models.TextField(default='Assignment')),
                ('assignment_description', models.TextField()),
                ('deadline', models.DateTimeField()),
                ('subtask_details', models.JSONField(default=list)),
                ('attachments', models.JSONField(default=list)),
                ('assignor', models.ForeignKey(db_column='Assignor_ID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'AssignmentDetails',
            },
        ),
        migrations.CreateModel(
            name='AssignmentRoles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_id', models.CharField(max_length=255)),
                ('assignment', models.ForeignKey(db_column='AssignmentID', on_delete=django.db.models.deletion.CASCADE, to='api.assignmentdetails')),
                ('user', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'AssignmentRoles',
            },
        ),
        migrations.CreateModel(
            name='AssignmentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('submission_id', models.CharField(max_length=255)),
                ('submission_link', models.URLField()),
                ('submission_doc', models.TextField()),
                ('points_assign', models.IntegerField()),
                ('feedback_details', models.JSONField(default=list)),
                ('submission_attachments', models.JSONField(default=list)),
                ('assignment', models.ForeignKey(db_column='AssignmentID', on_delete=django.db.models.deletion.CASCADE, to='api.assignmentdetails')),
                ('reviewer', models.ForeignKey(db_column='ReviewerID', on_delete=django.db.models.deletion.CASCADE, to='api.assignmentroles')),
                ('user', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'AssignmentStatus',
            },
        ),
        migrations.CreateModel(
            name='GroupDetails',
            fields=[
                ('groupID', models.AutoField(primary_key=True, serialize=False)),
                ('GroupName', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('groupProfileImage', models.ImageField(blank=True, null=True, upload_to='group_profile_images/')),
            ],
            options={
                'db_table': 'GroupDetails',
                'indexes': [models.Index(fields=['groupID', 'GroupName', 'description', 'groupProfileImage'], name='group_details_idx')],
            },
        ),
        migrations.CreateModel(
            name='GroupMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupID', models.ForeignKey(db_column='groupID', on_delete=django.db.models.deletion.CASCADE, to='api.groupdetails')),
                ('userID', models.ForeignKey(db_column='userID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'GroupMembers',
            },
        ),
        migrations.CreateModel(
            name='WorkspaceDetail',
            fields=[
                ('workspace_name', models.CharField(max_length=255)),
                ('workspace_logo_image', models.ImageField(blank=True, null=True, upload_to='workspace_logos/')),
                ('workspace_description', models.TextField()),
                ('workspace_id', models.AutoField(primary_key=True, serialize=False)),
                ('invitation_token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('token_created_at', models.DateTimeField(blank=True, null=True)),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'WorkspaceDetail',
                'indexes': [models.Index(fields=['workspace_name', 'workspace_logo_image', 'workspace_description', 'workspace_id'], name='workspace_detail_idx')],
            },
        ),
        migrations.AddField(
            model_name='assignmentdetails',
            name='workspace_id',
            field=models.ForeignKey(db_column='workspace_id', default=1, on_delete=django.db.models.deletion.CASCADE, to='api.workspacedetail'),
        ),
        migrations.CreateModel(
            name='WorkspaceMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workspace_role', models.CharField(max_length=255)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('workspace_id', models.ForeignKey(db_column='workspace_id', on_delete=django.db.models.deletion.CASCADE, to='api.workspacedetail')),
            ],
            options={
                'db_table': 'WorkspaceMembers',
            },
        ),
        migrations.AddIndex(
            model_name='userdetails',
            index=models.Index(fields=['name', 'email', 'password', 'profile_image', 'user_details'], name='user_details_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentroles',
            index=models.Index(fields=['assignment', 'user', 'role_id'], name='assignment_roles_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentstatus',
            index=models.Index(fields=['user', 'task_id', 'status', 'reviewer', 'submission_id', 'submission_link', 'submission_doc', 'assignment', 'feedback_details'], name='assignment_status_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmembers',
            index=models.Index(fields=['userID', 'groupID'], name='group_members_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentdetails',
            index=models.Index(fields=['workspace_id', 'assignment_id', 'assignor', 'assignment_name', 'assignment_description'], name='AssignmentD_workspa_4e61ab_idx'),
        ),
        migrations.AddIndex(
            model_name='workspacemembers',
            index=models.Index(fields=['workspace_id', 'user_id', 'workspace_role'], name='workspace_members_idx'),
        ),
    ]
